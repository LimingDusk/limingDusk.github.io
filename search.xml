<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2025/01/15/hello-world/</url>
    <content><![CDATA[
<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d5fc43924d56dac6177cf3fbab391037152761666f16e541aeee69b4dd66b832">5844f566621fccb9c583f0174433e530579865212178e7ee4925a0fcb134f5ca075919c938c0dc47a4a9b57d567b027351b646470b48241f4b3b790af68df6b890a7ee90e09997b5c9f5e2d9d2334caf3df4a885eb66154d94897d5202bad2dc698ecb3b9f60dd8497fb6bbbfd0bf331b67b5fca404230fbd96ea38e8689cc03cfd5df0bcf34a41c307e6ab5cf2e7b6a5298dd9058fc488fa276edb679a6ea2eebaf21b5bddc61161cbcaebd21ac930f43b5d07c3d16c86824d4dae09a0e9dbc51031e1d25f65b5fbe26dcd7823822a9564221e67cd4deb1a96afe320227aac2fc50b721b736df9f4af557e8922b74094ba16a1a50707c63dff30e19c44cf88ec96d01bc67241ee0ba33b5c929ab3a85e1d862954bc0d0fb37a347bec6f770bb16140f0d03ec3be7cb4815114db1c0e1ca753fb906146248c713b8dc21a60b6ae134b0768b87e1e471c7d3e765340073a64061307466343665b3a63b7ae861c86f55d9f12de8b12365aa99e7f99e8ee16b9f431fe74a04af75a7d429b20bd0c54c8a17729903811e7a67dd9408653a18dc1a8a025c1c1436f19ffbf2eb9dc4b1714cb51dde3230bc909efbd1210d577e1ffd8da6ab258d37f0be5bd05f03b22543216806babfaa34fdeff5f3bdcb0c0a96e989f0d7c86e291ad6aef9c56de2b48a1230de207f85f14f5eb4e128d48953c56e8c6867ef5a04db1ba7a60cc52caf94e48a2abff16be61e7c322bd47ac3293251e36b136a0b228324ce6f7bf8e3c098ad88165269994eb38cb85eede27f29f6433dda78680b8e340c5a9ca11f4d9c6c2f57c66dfa46e90247fd730e55ceb4f09b09aba3b02b53e8ecaa57ef03d1dbd65ed469eee3d42c6c4fae8f5caa9aa17bfbbccfc260c194a6201069259332a0c4220b066cc54239c6311b995dcb27bebb127b5d20c44d673453d3025a2d46d1213432f8c4598168348a5a2f292107412d8c114d9ba75f87ebce08cb8d69d98e842617a975d474c97356bd0f14f1b385fba2a45c0b90a646a78b94952f02c1ce2f8c2e7c328f24a86c2e717c2b325f37f0dfff8f841229ee2abba4a029223d2c0c62ace5ab484f357e841ebb8a5e86910615f08e8945d62ed4b061f8d2e44da7039178ce998dede1dcfafc93823b62a2b731169fa29f307cfc111d0ed6ee7a0620a48aaf40b538f2285e2f6d9c61e7ff74c04a0dc31dc6eccc7f8452c6e4fd900f7e6a3b02519038ecfef87888a52ae11aecbbe1cb2f23e841481f2151b717704a4c807996031ea7d1fd8b070e6f4cdf061094028b6e295bccf513629423f046c7e76548559cc6554673896c840588e281c8eb12136a4cda4c54dae771efbf1bd08eb06324c6694cdd4067ef2c17880dc620443cc03965bee2791f519f9bb165494b8fac4e2997fa6e4bb7a2815961a73c117248559d293104b1b0602b32ce583b462d69284a34cb9af23fb245576761f8777f393cac6af6d91661bf3fa1f4ea821b59d5b23363dc287f69e2f16e63390221c7d4bb83132f21447c892b0af3ce2a0d8fd3e517b2f2ff08ecc8386983fcdd83f993b366950d095077ff302b7aed3ad1bc0a4d6b54e62dbb57c4c3db6a1921f14a09bb6b5adc17d2cca6e9bc897eb0e0a48a29618b588b69bfed5f8b45a2521e3d7725e9bd000c547661ab9f05c098b03af4d679509d0be5907f86d74f7922746a1b177725df286bb1675c7e2735dfa4db7ca8a0e812edcbb9e84c89d4afeef5e76ec59dd05518b6fbdac7c81560e93b669a1388d5c25fa1acfc1cb422d489737013c0fa2b9df96532869494b800163b73ba72d8761a2bbac04afebba853299c267671242c1a60bad3a97fd94e5727de90d33f4aec49470ad07acc77ca01dcb30ddd1a26b72323221241ebb6b1bed1272afb84a12a00b889d0cf03eca1e4470c7ee7410a3b35ab93786f7111b594322a18c719e551ea59393916154c04dc9810211a2c030e71044fb5b8be41413b03df88585a6b46f74e4b6c444a52504d518ec8c21fc42cd8e5d1af2970cf58181eaa6f6dc41d235502d8149af9ace623bb57a61d4fde1ed51e9c3563f558574445618b20e3fa8d236050a17b082e9984717da2fda175ae8d1e0d6dd93ac520aa108ae3fca226a1b0efaab70fc05530e8aa4bdfaa8ca8cea158729018ea01acfc188702bc8b8ef7ce2ba301fee677dc6f24f0cb29e86e44cdfb64f1390d1e2cd4e239357fb6288e4cf2dadce1f85ee55fc9014eef0475d6b4857d2e0c0c097366d72266a3b423f5a5629d864f3af96c9d898c87bd6c3d27c97534b87526cd031209014dd59bfe6c1a66302a0aca629a1bc9d8cfcc944ee15e5c42965be0b017085c4b1ea5c03707fa3483f5a413800d0424da1ea1d04ac4f1788352c178fd9cc47aa6777d9b9e140ac32aaec34d646c06e64a30ceffbe486bf1d184321f57e50b37f39a9d21414ad1f8fa929a42ad3af776e48645ffcb16c5d5633c8d3899556a05daa3469f75e5b54b813219b76f862903695e399ea11bbfcee0cd4f51cb5c9b7d3e7e58ca1990548157801d4c1c0eecce925410f85cff6f2966393d408f2c2e7feb309447acba0bedbee36caf59dd996a5fc8d17a4cdda212863f901d1ae7ebeb374878810685d98a0447deceabc12ed5c697d500f91922822a8958d37949e2aa69514d8481f18b658434012db3d54b9dd1bdbd8c7c8118dc342a6912101831f0f6199986c30245578030cd015e813a6ab1cd506b1b4b5307e168c11e46ac6249f77026e62cd33d2929c6a9f91dbdc8c61bc1e0e83e33699b42bd52198391867db9c47b69f52c73bac936efabceed7badc654406bcc5fa64819584d6ddc712e7dd9ce552ad64659f51399a09c323fca86e8ff7c8ae7e903e029b060ca2d242ec39354b9646503e2acbecd5c77fa972fecacb0d1d13b7ea5e889382b96fdfdf7143f0c55c27887869227837cf8a0f80bc81efddb8e4785180c16b1a8581115ef006bfc057314ae8d27e07c89ff805066b966abb2e9bc9a7b6cc42d6e831ab78593d1c60ccb721e14cd8d09a50470f2f7028c2666837bf6ad965d621cbab03365c417a027300bd791a7a585f2ad98b9449de1fa54e2fcbb14cb062ffe0ba0bcb770371e013e217182adcb226b78e18671458f45d72cecc85a7f31be866c937aada4548808f6d5fab49324eeba41cf2fe0596ba8466506f31c5f584a95f15bba139085c8468c30fbdb35f78960afd1573eb80d5b07f1a2a143325339f1413d46dedf578d3d8cd75faafa19b71d42f7fe28a74ac7949d0279a7471dde330bda1a7b3cc322261681a6ff555fc037ecf899ecbae1ba4c26ff9e955b792e62566c1b8faa621bafcb16790cf2e5a2dd2a973e0f05b807cae188d798c11e7b358077b90193308f4f17187ccf8004958c3a049dab43bc0e63c9bc53ef38013f91e45bbc8c5439f73c03b8f761fbfba223c3f7eb515f1f3f872ed8d342b5831a954b4a107a76e9c1e0e11b52d04f3f79c07771914380831fdf43f63bdb8ea4f4891cb8b1cf1c31a87b4b13831b2a9c2f5df4488e60ac2f7b34ce1460dd390610fed70179b6263129c94427122ceccb7369f3d11c2e889e30527ffcf51c1b7c2cfa4316b88f78825328aaad6752a36643be2827c3ec6720d5888a51a156c3d38ce65ff2695cea51917107cd827abf18d3e666563f8587485abed592815ea3efc1c16a27f4780987d50fc39f0a2b90499afb1e18732fde583b75fc2151233b3740765a4ff6cd9a04de130638e6816faed8319d3817ff17a3b9ae0dd087bc2dc98fbedeb03913d763feb10b911ce812d6083774ea1dc158ada2e8d69e5ca11aaffa48e857df0d2b2721c56d42bbc28d97f3baf32f88f677a82d6b67b69b0d35086901b87c97d4d31ffd97d8755b6a5ce49686e67e3d4c06dd403a6918eb462519ccf39f5bcb167e78a99990985b7014fab151a6fac262a53ea22700650c6711cf8727a17ff1bde1fc9d21b43ed67c8ff83fdbd5975b9440200af50a68ce80f6c92d344df2480c960c53d7996240acb1c3809b5e15c56ad20e3c0e7ab4ae9cbc26eeaba61cedc6e853853a61213fc5504c904dabe85fdc380250ccc130ba2bb63cfe04121025561966623a4b8595a10cb468d8cd62e1175de1a83e7c1b4f47eb63dcf904460f50de959ade3df818706da2c3e21ddc60f8f6b7e75e361ed3e7e18c462c0156a217ad0e94841da350f65889e2dcc58980487df8545dcc1e1ba7d56c0291e232cf913b7d8317ca25a65572363d81a2dc43f4fd0c8e6ef8853b982fb763027892b16c67c868b0ba0e463367d8df89909d719e096a0ef121e082897569432cb0e5340e40a41aaf26072ba7808fedddf95347cdc40cc94a8a3d4f13e3b48a5fb83cdda83f9ff754f5a111d543dbb6fcc7ba321c24c57f8cfa52a21d8a7277810cd22d04692abdbcd6a0ccdcddb95c0d139b975a652a150f4892572dab17a0889a362b117f184d9f3586606f72652e9fbb8632349330240e86bcfa8ca0e6dee4b892bb59cc00b3616b41bf30ba59d80bf902938beec3d451c00ecb1187d271d93fa18d6d3232c50cef27f744c2843b733297b6608c856a3bb0021f6520421b422d76a5f85935c5a21626fdb98d25aee66cad9ca23846ef32e2504d48f86d687055f0a4880269ae57ffb6c40a69baa9a7939d2654c3b343006ba75a3713c8bb5d5a1609cb1ec26556e94d557fd456add4e3daefca29dbff9bc43fedafe93eb6b2fe70e9adfd194384de1648864e350a144c5665ece9af07c6bec6e2a855c104b174e6c03b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<link href="/css/hbe.style.css" rel="stylesheet" type="text/css"><script data-swup-reload-script type="module" src="/js/plugins/hbe.js"></script>
<script data-swup-reload-script type="module">
import {initHBE} from "/js/plugins/hbe.js";
  console.log("hexo-blog-encrypt: loaded.");
    initHBE();
</script>
]]></content>
  </entry>
  <entry>
    <title>jenv多版本jdk管理</title>
    <url>/2025/01/15/jenv%E5%A4%9A%E7%89%88%E6%9C%ACjdk%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>macOS 用户建议先安装 [Homebrew]，这是一个 macOS 下的命令行软件管理器，可以通过一行命令安装 Apple（或 Linux 系统）没有预装但你需要的软件。</p>
<p>安装完成后，直接执行 <code>brew install openjdk@8</code> 就可以安装 JDK 8 了。</p>
<p>如果需要在 macOS 安装多个版本的 JDK ，比如说 JDK 17，多个版本的 JDK 怎么管理呢？可以安装一下 <a class="link"   href="https://www.jenv.be/" >jEnv<i class="fa-solid fa-arrow-up-right ml-[0.2em] font-light align-text-top text-[0.7em] link-icon"></i></a>，一个帮助我们管理 JAVA_HOME 的命令行工具，在 GitHub 上已经收获 4.3k 的 star。</p>
<p>安装：</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">brew install jenv</span><br></pre></td></tr></table></figure></div>

<p>在 zsh 中配置 jenv：</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$HOME</span>/.jenv/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(jenv init -)</span>&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>通过 <code>vim ~/.zshrc</code> 把以上内容添加到配置文件中并保存（source 下可以立即生效）</p>
<p>之后通过以下方式添加 JDK 到 jenv 中：</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">jenv add /usr/local/opt/openjdk@17/libexec/openjdk.jdk/Contents/Home/</span><br></pre></td></tr></table></figure></div>

<p>JDK 的安装路径可以通过两种方法 get 到。</p>
<p>一般情况下，JDK 的默认安装路径为 <code>/Library/Java/JavaVirtualMachines/</code>，进入该目录就可以看到。</p>
<p>还可以通过以下命令获取当前安装的 JDK 路径。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/libexec/java_home</span><br></pre></td></tr></table></figure></div>

<p>添加 JDK 的路径后可以通过 <code>jenv versions</code> 查看所有添加到 jenv 进行管理的 JDK 版本。</p>
<p>带 <code>*</code> 的表示当前默认的 JDK 版本。</p>
<p>可以通过 <code>jenv global xxx</code> 切换全局的 JDK 版本。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">jenv global 17</span><br></pre></td></tr></table></figure></div>

]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2025/01/17/Untitled/</url>
    <content><![CDATA[<h1 id="Redis-安装与配置文档"><a href="#Redis-安装与配置文档" class="headerlink" title="Redis 安装与配置文档"></a>Redis 安装与配置文档</h1><p>本文档详细说明了如何在 Linux 系统中安装和配置 Redis，使用编译安装方式并配置为系统服务。安装的 Redis 将监听所有 IP 地址，并启用密码保护。</p>
<h2 id="1-配置-SELinux"><a href="#1-配置-SELinux" class="headerlink" title="1. 配置 SELinux"></a>1. 配置 SELinux</h2><p>首先，禁用 SELinux，避免其可能带来的权限问题。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 禁用 SELinux</span></span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查 SELinux 状态</span></span><br><span class="line">sestatus</span><br></pre></td></tr></table></figure></div>

<h2 id="2-创建-Redis-用户"><a href="#2-创建-Redis-用户" class="headerlink" title="2. 创建 Redis 用户"></a>2. 创建 Redis 用户</h2><p>创建一个专用的 Redis 用户和组，并且为 Redis 配置相应的权限。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建 Redis 用户和组</span></span><br><span class="line">useradd -r -s /usr/sbin/nologin redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Redis 安装目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p /soft/redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入安装目录</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置目录权限</span></span><br><span class="line"><span class="built_in">chown</span> -R redis:redis redis</span><br><span class="line"><span class="built_in">chmod</span> -R 755 redis</span><br></pre></td></tr></table></figure></div>

<h2 id="3-安装-Redis"><a href="#3-安装-Redis" class="headerlink" title="3. 安装 Redis"></a>3. 安装 Redis</h2><p>接下来，下载并安装 Redis。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 解压 Redis 安装包</span></span><br><span class="line">tar -xzvf redis-7.4.2.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入解压后的目录</span></span><br><span class="line"><span class="built_in">cd</span> redis-7.4.2/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 Redis，使用 libc 内存分配器</span></span><br><span class="line">make MALLOC=libc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 Redis</span></span><br><span class="line">make PREFIX=/soft/redis install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制默认配置文件到安装目录</span></span><br><span class="line"><span class="built_in">cp</span> redis.conf /soft/redis</span><br></pre></td></tr></table></figure></div>

<p>设置 Redis 配置文件的权限。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 赋予 Redis 用户对安装目录的权限</span></span><br><span class="line"><span class="built_in">cd</span> /soft</span><br><span class="line"><span class="built_in">chown</span> -R redis:redis redis</span><br></pre></td></tr></table></figure></div>

<h2 id="4-配置-Redis"><a href="#4-配置-Redis" class="headerlink" title="4. 配置 Redis"></a>4. 配置 Redis</h2><p>编辑 Redis 配置文件 <code>redis.conf</code>，以适应系统环境，并启用系统服务支持。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入 Redis 配置目录</span></span><br><span class="line"><span class="built_in">cd</span> redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 redis.conf 文件</span></span><br><span class="line">vi redis.conf</span><br></pre></td></tr></table></figure></div>

<p>在 <code>redis.conf</code> 中，进行如下修改：</p>
<ul>
<li>将 <code>supervised</code> 配置项设置为 <code>systemd</code>。</li>
<li>设置 <code>pidfile</code>。</li>
<li>禁止因后台保存错误而停止写入操作。</li>
<li>配置绑定地址为所有 IP 地址，并设置密码。</li>
</ul>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">stop-writes-on-bgsave-error no</span><br><span class="line">supervised systemd</span><br><span class="line">pidfile /soft/redis/redis.pid</span><br><span class="line"><span class="built_in">bind</span> 0.0.0.0 -::1</span><br><span class="line">requirepass   rE8bsEFTU2Z7Z%U</span><br><span class="line">logfile <span class="string">&quot;/soft/redis/redis.log&quot;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="5-配置-Systemd-服务"><a href="#5-配置-Systemd-服务" class="headerlink" title="5. 配置 Systemd 服务"></a>5. 配置 Systemd 服务</h2><p>为 Redis 创建一个 Systemd 服务单元，以便通过 <code>systemctl</code> 管理 Redis 服务。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建并编辑 Redis 服务文件</span></span><br><span class="line">vi /etc/systemd/system/redis.service</span><br></pre></td></tr></table></figure></div>

<p>添加以下内容到 <code>redis.service</code> 文件：</p>
<div class="code-container" data-rel="Ini"><figure class="iseeu highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Redis In-Memory Data Store</span><br><span class="line"><span class="attr">Documentation</span>=man:redis-server(<span class="number">1</span>)</span><br><span class="line"><span class="attr">After</span>=network.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">User</span>=redis</span><br><span class="line"><span class="attr">Group</span>=redis</span><br><span class="line"><span class="attr">ExecStart</span>=/soft/redis/bin/redis-server /soft/redis/redis.conf</span><br><span class="line"><span class="attr">ExecStop</span>=/soft/redis/bin/redis-cli shutdown</span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">no</span></span><br><span class="line"><span class="attr">LimitNOFILE</span>=<span class="number">65536</span></span><br><span class="line"><span class="attr">TimeoutSec</span>=<span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></div>

<h2 id="6-启动-Redis-服务"><a href="#6-启动-Redis-服务" class="headerlink" title="6. 启动 Redis 服务"></a>6. 启动 Redis 服务</h2><p>加载 Systemd 服务配置并启动 Redis 服务。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 重新加载 Systemd 配置</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动 Redis 服务</span></span><br><span class="line">systemctl start redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 Redis 服务开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> redis</span><br></pre></td></tr></table></figure></div>

<h2 id="7-配置-Redis-密码"><a href="#7-配置-Redis-密码" class="headerlink" title="7. 配置 Redis 密码"></a>7. 配置 Redis 密码</h2><p>启动 Redis 后，你可以通过 <code>redis-cli</code> 设置密码。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 通过 Redis CLI 设置密码</span></span><br><span class="line">redis-cli</span><br><span class="line">CONFIG SET requirepass rE8bsEFTU2Z7Z%U</span><br></pre></td></tr></table></figure></div>

<p>为了使密码设置在重启后生效，修改 Redis 配置文件 <code>redis.conf</code>，并设置 <code>requirepass</code>。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件，设置密码</span></span><br><span class="line">vi /soft/redis/redis.conf</span><br><span class="line">requirepass rE8bsEFTU2Z7Z%U</span><br></pre></td></tr></table></figure></div>

<h2 id="8-登录-Redis"><a href="#8-登录-Redis" class="headerlink" title="8. 登录 Redis"></a>8. 登录 Redis</h2><p>使用设置的密码登录 Redis。</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用密码登录 Redis</span></span><br><span class="line">redis-cli -a rE8bsEFTU2Z7Z%U</span><br></pre></td></tr></table></figure></div>

<p>或者使用 <code>AUTH</code> 命令临时认证：</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 临时认证</span></span><br><span class="line">redis-cli</span><br><span class="line">AUTH rE8bsEFTU2Z7Z%U</span><br></pre></td></tr></table></figure></div>

<h2 id="9-测试-Redis-服务"><a href="#9-测试-Redis-服务" class="headerlink" title="9. 测试 Redis 服务"></a>9. 测试 Redis 服务</h2><p>测试 Redis 是否正常工作：</p>
<div class="code-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用 Redis CLI 连接到 Redis 实例</span></span><br><span class="line">redis-cli -a rE8bsEFTU2Z7Z%U</span><br></pre></td></tr></table></figure></div>

<p>确认 Redis 是否可以正常响应命令。</p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>至此，你已经成功在 Linux 系统上编译并安装了 Redis，并将其配置为使用 Systemd 管理的服务。你还为 Redis 配置了密码保护和其他安全设置。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../images/Untitled/xiaohuolong.svg"
                      alt="xiaohuolong"
                ></p>
]]></content>
  </entry>
</search>
